{"version":3,"sources":["pages/Landing.jsx","pages/Dashboard.jsx","pages/Home.jsx","pages/Login.jsx","pages/Registration.jsx","pages/Logout.jsx","pages/Stats.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["Landing","props","handleInputChange","event","target","value","name","setState","onSubmit","preventDefault","state","className","Component","Dashboard","chooseProblem","id","desc","code","output","creatingProblem","active","currentProblem","description","time","Date","canSubmit","runcount","currentAttempts","canRun","currentErrors","running","problemComplete","fetch","headers","then","res","status","json","data","curr","unescape","complete","attempts","catch","err","console","error","alert","createProblem","password","prompt","escape","method","body","JSON","stringify","defaultOutput","Error","log","window","location","reload","deleteProblem","submitCode","msg","studentMsg","onChangeCode","e","onPassword","onChangeTitle","onChangeDescription","onChangeConsole","runCode","match","detectInput","detectImport","includes","timeDiff","seconds","Math","round","elapsedTime","isAdmin","problems","probs","forEach","p","this","map","item","variant","key","disabled","onClick","pill","placeholder","mode","theme","onLoad","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","height","width","wrapEnabled","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","readOnly","annotations","Control","type","as","rows","withRouter","Home","isLoggedIn","loading","firstname","lastname","parentSet","page","Login","login","history","push","setName","setAdmin","setId","user","loginForm","required","Registration","working","email","username","Logout","document","cookie","logout","Stats","users","downloadStats","fetching","now","text","element","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","totalAttempts","cuser","length","_downloadBtn","animation","size","role","aria-hidden","downloadBtn","Toggle","Menu","Item","i","selectUser","App","isLoaded","items","refreshed","bind","loginButton","to","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9df75c6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./style/Home.css\";\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        \n        \n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div className=\"page\">\n                LANDING PAGE\n            </div>\n        );\n      }\n    \n}\n\nexport default Landing;","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Badge from 'react-bootstrap/Badge'\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport \"./style/Home.css\";\nimport \"./style/Dashboard.css\";\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n            problems: [],\n            error: false,\n            active:'',\n            currentProblem:{\n                name:'',\n                description: '',\n                code:'# Survey: bit.ly/A20prev'\n            },\n            output:'',\n            currentAttempts:0,\n            creatingProblem: false,\n            canSubmit: false,\n            canRun: false,\n            password: '',\n            time: 0,\n            problemComplete: false,\n            runcount : 0,\n            currentErrors:[],\n            running: true\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/problems', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                this.setState({\n                    error:true\n                });\n            }\n        })\n        .then(data => {\n            var probs = data.data;\n            probs.forEach(p => p.code = unescape(p.code));\n\n            this.setState({problems:probs});\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                \n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data) {\n                this.setState({isAdmin: data.isAdmin});\n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    chooseProblem = (id, name, desc, code, output, creatingProblem) => {\n        this.setState({\n            active:id, \n            currentProblem:{\n                name:name,\n                description:desc,\n                code:code\n            },\n            creatingProblem: creatingProblem,\n            time: new Date(),\n            canSubmit:false,\n            runcount:0,\n            currentAttempts:0,\n            output:output,\n            canRun:false,\n            currentErrors:[],\n            running: false,\n            problemComplete: false\n        });\n\n        fetch('/api/user/data/' + id, {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data.data != null) {\n                var curr = this.state.currentProblem;\n                curr.code = unescape(data.data.code);\n                this.setState({currentProblem: curr, problemComplete: data.data.complete, currentAttempts:data.data.attempts, output: unescape(data.data.output)});\n            }\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    createProblem = () => {\n        if (this.state.canSubmit) {\n\n            var password = prompt(\"Enter your password\");\n            var code = this.state.currentProblem.code;\n            code = escape(code);\n\n            fetch('/api/problems', {\n                method: 'POST',\n                body: JSON.stringify({\n                    name: this.state.currentProblem.name,\n                    description: this.state.currentProblem.description,\n                    code: code,\n                    password:password,\n                    defaultOutput: this.state.output\n                }),\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .then(data => {\n                console.log(data);\n                window.location.reload();\n            }) \n            .catch(err => {\n                console.error(err);\n                alert('Error logging in please try again');\n            });\n        }\n        else {\n            alert(\"Run your code first!\");\n        }\n    }\n\n    deleteProblem = (id) => {\n        var password = prompt(\"Enter your password\");\n        fetch('/api/problems', {\n            method: 'DELETE',\n            body: JSON.stringify({id:id, password:password}),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                console.log(res);\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            console.log(data);\n            window.location.reload();\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    submitCode = (id) => {\n        if (this.state.canSubmit) {\n            var msg = prompt(\"Were any of the bugs challenging? If yes, why?\");\n            if (msg && msg !== '') {\n\n                fetch('/api/submit', {\n                    method: 'POST',\n                    body: JSON.stringify({id: id, studentMsg: msg}),\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                        'Content-Type': 'application/json'\n                    }\n                })\n                .then(res => {\n                    if (res.status === 200) {\n                        return res.json();\n                    } else {\n                        const error = new Error(res.error);\n                        throw error;\n                    }\n                })\n                .then(data => {\n                    this.setState({problemComplete: true});\n                }) \n                .catch(err => {\n                    console.error(err);\n                    alert('Error logging in please try again');\n                });\n            }\n            else {\n                alert(\"Please write an explanation.\");\n            }\n        }\n        else {\n            alert(\"Run your code first!\");\n        }\n    }\n\n\n    onChangeCode = (e) => {\n\n        var curr = this.state.currentProblem;\n        curr.code = e;\n        this.setState({currentProblem: curr, canSubmit: this.state.runcount > 0, canRun: true});\n    }\n\n    onPassword = (e) => {\n        this.setState({password:e.target.value});\n    }\n\n    onChangeTitle = (e) => {\n        var curr = this.state.currentProblem;\n        curr.name = e.target.value;\n\n        this.setState({currentProblem: curr});\n\n    }\n\n    onChangeDescription = (e) => {\n        var curr = this.state.currentProblem;\n        curr.description = e.target.value;\n\n        this.setState({currentProblem: curr});\n    }\n\n    onChangeConsole = (e) => {\n        console.log(e);\n        this.setState({output: e})\n    }\n\n    runCode = (id) => {\n        if (!this.state.canRun) {\n            alert(\"Change the code before running!\");\n        }\n        else {\n            console.log(this.state.currentProblem.code.match(/(input\\((.*)\\))/g));\n            var detectInput = this.state.currentProblem.code.match(/(input\\((.*)\\))/g) != null;\n            var detectImport = this.state.currentProblem.code.includes(\"import\");\n            \n            if (detectInput || detectImport) {\n                alert(\"Do not use input(\\\"...\\\") OR import!\");\n            }\n            else {\n                this.setState({running: true});\n                var code = escape(this.state.currentProblem.code);\n                var endTime = new Date();\n                var timeDiff = endTime - this.state.time; //in ms\n                // strip the ms\n                timeDiff /= 1000;\n\n                // get seconds \n                var seconds = Math.round(timeDiff);\n\n                this.setState({canSubmit: true, runcount: this.state.runcount + 1});\n\n                fetch('/api/run', {\n                    method: 'POST',\n                    body: JSON.stringify({id: id, code:code, elapsedTime: seconds}),\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                        'Content-Type': 'application/json'\n                    }\n                })\n                .then(res => {\n                    this.setState({running: false});\n                    if (res.status === 200) {\n                        return res.json();\n                    } else {\n                        const error = new Error(res.error);\n                        throw error;\n                    }\n                })\n                .then(data => {\n                    this.setState({output:data.output, currentAttempts: data.attempts});\n                }) \n                .catch(err => {\n                    console.error(err);\n                    alert('Error logging in please try again');\n                });\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className='dash'>\n                <div className='sidemenu dash-item'>\n                    <div className=\"problems-header\">Problems</div>\n                    {this.state.problems.map(item=>(\n                        <Button className='problem' \n                                variant={this.state.active!==item.id ? \"outline-dark\" : \"dark\"} \n                                key={item.id}\n                                disabled={this.state.active!==item.id ? false : true}\n                                onClick={() => {this.chooseProblem(item.id, item.name, item.description, item.code, item.defaultOutput, false)}}>\n                            {item.name}\n                        </Button>\n                    ))}\n\n                    {this.state.isAdmin ? \n                        <Button className='problem' \n                                variant={this.state.active!==\"create-problem-button\" ? \"outline-danger\" : \"danger\"} \n                                key={'create-problem-button'}\n                                disabled={this.state.active!==\"create-problem-button\"? false : true}\n                                onClick={() => {this.chooseProblem(\"create-problem-button\",\n                                '', '', '', '', true)}}>\n                            Add Problem\n                        </Button>\n                        : <span></span>\n                    }\n                </div>\n                <div className='dash-content dash-item'>\n                    <div className=\"dash-content-item editor-container\">\n                        <div className='problem-status'>\n\n                            <div className='status-item'> \n                                {this.state.problemComplete ?\n                                    <Badge pill variant=\"success\">Complete</Badge>\n                                :\n                                    <Badge pill variant=\"warning\">Incomplete</Badge>\n                                }\n                            </div>\n                            <div className='status-item'> \n                                {this.state.active !== '' && this.state.running ?\n                                    <Badge pill variant=\"danger\">Running...</Badge>\n                                :\n                                    <span></span>\n                                }\n                            </div>\n                            {/* <div className='status-item'><Badge variant=\"light\">Attempts <Badge variant=\"dark\">{this.state.currentAttempts}</Badge></Badge></div> */}\n                        \n                        </div>\n                        <AceEditor\n                            placeholder=\"Enter python code\"\n                            mode=\"python\"\n                            theme=\"github\"\n                            name=\"editor\"\n                            className=\"editor\"\n                            onLoad={this.onLoad}\n                            onChange={this.onChangeCode}\n                            fontSize={14}\n                            showPrintMargin={true}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.state.currentProblem.code}\n                            height='95%'\n                            width='99%'\n                            wrapEnabled={true}\n                            setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: true,\n                                showLineNumbers: true,\n                                tabSize: 4,\n                                readOnly: this.state.active === ''\n                            }}\n                            key={this.state.active + \"-editor\"}\n                            annotations={this.state.currentErrors}\n                        />\n                    </div>\n                    <div className=\"dash-content-item right-side\">\n                        <div className=\"problem-info\">\n                            {this.state.isAdmin && this.state.creatingProblem ?\n                                <Form.Control className='title' type=\"text\" placeholder=\"Enter problem title\" onChange={this.onChangeTitle}/>\n                            :\n                                <div className='title'>\n                                    {this.state.currentProblem.name}\n                                </div>\n                            }\n\n                            {this.state.isAdmin && this.state.creatingProblem  ?   \n                                <Form.Control className='description' as=\"textarea\" rows=\"3\" onChange={this.onChangeDescription}/>\n                            :\n                                <div className='description'>\n                                    {this.state.currentProblem.description}\n                                </div>\n                            }\n                            \n                        </div>\n                        <div className=\"console\">\n                            <AceEditor\n                                placeholder=\"\"\n                                mode=\"json\"\n                                theme=\"github\"\n                                name=\"console\"\n                                className='console-editor'\n                                onLoad={this.onLoad}\n                                onChange={this.onChangeConsole}\n                                fontSize={12}\n                                showPrintMargin={false}\n                                showGutter={true}\n                                highlightActiveLine={false}\n                                value={this.state.output}\n                                height='100%'\n                                width='100%'\n                                wrapEnabled={true}\n                                setOptions={{\n                                    enableBasicAutocompletion: false,\n                                    enableLiveAutocompletion: false,\n                                    enableSnippets: false,\n                                    showLineNumbers: false,\n                                    tabSize: 2,\n                                    readOnly: !this.state.creatingProblem\n                                }}\n                            />\n                        </div>\n\n                        <Button className='problem' \n                                variant=\"danger\" \n                                onClick={() => {this.runCode(this.state.active)}}\n                                disabled={this.state.running}>\n                            Run Code\n                        </Button>\n\n                        {this.state.isAdmin && this.state.creatingProblem ?\n                            <Button className='problem' \n                                    variant=\"success\" \n                                    onClick={() => {this.createProblem()}}\n                                    disabled={this.state.active === ''}>\n                                Submit Problem\n                            </Button>\n                        :\n                            <Button className='problem' \n                                    variant=\"primary\" \n                                    onClick={() => {this.submitCode(this.state.active)}}\n                                    disabled={this.state.active === '' && this.state.canSubmit === false}>\n                                Submit\n                            </Button>\n                        }\n\n                        {this.state.isAdmin && !this.state.creatingProblem ?\n                                <Button className='problem' \n                                        variant=\"dark\" \n                                        onClick={() => {this.deleteProblem(this.state.active)}}\n                                        disabled={this.state.active === ''}>\n                                    Delete Problem\n                                </Button>\n                        :\n                            <span></span>\n                        }\n                    </div>\n                    \n                </div>\n            </div>\n        );\n      }\n    \n}\n\nexport default withRouter(Dashboard);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nimport Landing from '../pages/Landing';\nimport Dashboard from '../pages/Dashboard';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg: \"\",\n            isLoggedIn:false,\n            loading:true,\n            firstname: '',\n            lastname: '',\n            isAdmin: '',\n            id:'',\n            parentSet: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    msg: \"USER LOGGED IN!\",\n                    isLoggedIn:true,\n                    loading:false\n                });\n                //return res.body();\n                return res.json();\n            } else {\n                this.setState({\n                    msg: \"PLEASE LOGIN FIRST.\",\n                    isLoggedIn:false,\n                    loading:false\n                });\n            }\n        })\n        .then(data => {\n            console.log(data);\n            if (data) {\n                //console.log(data);\n                this.setState({\n                    firstname: data.firstname,\n                    lastname: data.lastname\n                });\n                this.setState({isAdmin: data.isAdmin});\n                this.setState({id:data.id});\n\n                \n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    componentDidUpdate() {\n        \n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n\n        var page = (<div>LOADING...</div>);\n        page = this.state.loading ? page: !this.state.isLoggedIn ? <Landing /> : <Dashboard />;\n        \n        return (\n            page\n        );\n      }\n    \n}\n\nexport default withRouter(Home);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user : '',\n            password: '',\n            isLoggedIn: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        fetch('/api/signin', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.props.login();\n                this.props.history.push('/');\n                return res.json();\n            } else {\n                console.log(res);\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            this.props.setName(data);\n            this.props.setAdmin(data.isAdmin);\n            this.props.setId(data.id);\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:true\n                });\n                return res.json();\n            } else {\n                this.setState({\n                    isLoggedIn:false\n                });\n            }\n        })\n        .then(data => {\n            console.log(data);\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginForm = (<form onSubmit={this.onSubmit}>\n            <h1>Login Below!</h1>\n            <input\n                type=\"text\"\n                name=\"user\"\n                placeholder=\"Email or Username\"\n                value={this.state.user}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>);\n        var page = this.state.isLoggedIn ? this.props.history.push('/') : loginForm;\n        return (\n            page\n        );\n      }\n    \n}\n\nexport default withRouter(Login);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nimport Badge from 'react-bootstrap/Badge'\n\nclass Registration extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email : '',\n            username : '',\n            password: '',\n            firstname: '',\n            lastname: '',\n            type: 0,\n            isLoggedIn: false,\n            working:false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        \n        event.preventDefault();\n\n        if (!this.state.working) {\n            this.setState({working:true});\n            fetch('/api/signup', {\n                method: 'POST',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                this.setState({working:false});\n                if (res.status === 200) {\n\n                    this.props.login();\n                    this.props.history.push('/');\n                    return res.json();\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .then(data => {\n                this.props.setName(data);\n                this.props.setAdmin(data.isAdmin);\n                this.props.setId(data.id);\n            }) \n            .catch(err => {\n                console.error(err);\n                alert('Error logging in please try again');\n            });\n        }\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:true\n                });\n            } else {\n                this.setState({\n                    isLoggedIn:false\n                });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginForm = (<form onSubmit={this.onSubmit}>\n            <h1>Login Below!</h1>\n            <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Student #\"\n                value={this.state.username}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"firstname\"\n                placeholder=\"First Name\"\n                value={this.state.firstname}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"lastname\"\n                placeholder=\"Last Name\"\n                value={this.state.lastname}\n                onChange={this.handleInputChange}\n                required\n            />\n\n            <select name='type' value={this.state.type} onChange={this.handleInputChange}>\n                <option value={0}>0</option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n            </select>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>);\n        var page = this.state.isLoggedIn ? this.props.history.push('/') : loginForm;\n        return (\n            <div>\n                <h2>Informed Consent Form & Registration </h2>\n\n                <div><strong>Title:</strong> PYBUGGY Study</div> \n                <div><strong>Investigators:</strong> Brian Harrington, Rachel D’souza, Angela Zavaleta Bernuy</div>\n\n                <p>I hereby consent to participate in a usability study conducted by the Investigators (listed above) as part of research conducted by the Department of Computer & Mathematical Sciences at the University of Toronto Scarborough.</p>\n\n                <p>By clicking “Submit”, I <strong>agree</strong> to participate in this study and the purpose of this study is to evaluate the usability and effectiveness of a new web application. Activity on this web application will be recorded. </p>\n\n                <p>By clicking “Submit”, I <strong>understand</strong> that:</p>\n                <ul>\n                    <li>The procedures to be used are the coding problems on the app and the questionnaires that will be filled out.</li>\n                    <li>The risks incurred by participating is possibly some frustration when completing the series of tasks.</li>\n                    <li>I may receive compensation in the form of a bonus mark in <strong>CSCA20</strong></li>\n                    <li>I am free to withdraw at any time during the study without the need to give any explanation or penalty.</li>\n                    <li>All materials and results will be kept confidential. Identifying information is collected for the sole purpose of attributing bonus marks. </li>\n                    <li>I can contact the course instructor, Brian Harrington (brian.harrigton@utsc.utoronto.ca) or invigilator Rachel (rachel.dsouza@mail.utoronto.ca) with any questions or concerns.</li>\n                </ul>\n\n                {this.state.working ?\n                    <Badge pill variant=\"danger\">Registering...</Badge>\n                :\n                    <span></span>\n                }\n\n                {page}\n            </div>\n            \n        );\n      }\n    \n}\n\nexport default withRouter(Registration);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nclass Logout extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email : '',\n            password: '',\n            isLoggedIn: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        document.cookie = \"token=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;\"\n        fetch('/api/signout', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:false\n                });\n                this.props.logout();\n                this.props.setName({firstname:'', lastname:''});\n                this.props.setAdmin(false);\n                this.props.setId(\"\");\n                this.props.history.push('/');\n            } else {\n                this.setState({\n                    isLoggedIn:true\n                });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    render() {\n        \n        return (\n            <div>Logged out!</div>\n        );\n      }\n    \n}\n\nexport default withRouter(Logout);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Badge from 'react-bootstrap/Badge'\nimport AceEditor from \"react-ace\";\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\n\nimport \"./style/Home.css\";\nimport \"./style/Stats.css\";\nimport \"./style/Dashboard.css\";\n\nclass Stats extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            problemComplete:false,\n            fetching:false,\n            problems:[],\n            active:'',\n            currentProblem:{\n                name:'',\n                description:'',\n                users: []\n            },\n            code:'',\n            console:'',\n            email:'',\n            user: {\n                firstname: '',\n                lastname: '',\n                id: '',\n                type: '',\n                totalAttempts: 0\n            }\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        fetch('/api/problems', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                this.setState({\n                    error:true\n                });\n            }\n        })\n        .then(data => {\n            var probs = data.data;\n            probs.forEach(p => p.code = unescape(p.code));\n\n            this.setState({problems:probs});\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    selectUser(user, item) {\n        console.log(user, item);\n\n        var curr = this.state.currentProblem;\n        curr.code = unescape(item.code);\n        this.setState({currentProblem: curr, output: unescape(item.output)});\n        this.setState({problemComplete: user.complete});\n\n        var cuser = this.state.user;\n        cuser.totalAttempts = user.attempts.length;\n\n        this.setState({user:cuser});\n\n        fetch('/api/user/' + user.email, {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data.data != null) {\n                var curr = this.state.user;\n                curr.firstname = data.data.firstname;\n                curr.lastname = data.data.lastname;\n                curr.id = data.data[\"_id\"];\n                curr.type = data.data.type;\n                console.log(data, curr);\n                this.setState({user: curr});\n            }\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    chooseProblem = (id, name, desc, code, output, creatingProblem) => {\n        this.setState({\n            active:id, \n            currentProblem:{\n                name:name,\n                description:desc,\n                code:code,\n                users:[]\n            }\n        });\n\n        fetch('/api/attempts/' + id, {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data.data != null) {\n                var curr = this.state.currentProblem;\n                curr.users = data.data;\n                console.log(data);\n                this.setState({currentProblem: curr});\n            }\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n\n        fetch('/api/user/data/' + id, {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data.data != null) {\n                var curr = this.state.currentProblem;\n                curr.code = unescape(data.data.code);\n                this.setState({currentProblem: curr, problemComplete: data.data.complete, currentAttempts:data.data.attempts, output: unescape(data.data.output)});\n            }\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    downloadStats = (id) => {\n        this.setState({fetching:true});\n        console.log('/api/problems/data/' + id)\n        fetch('/api/problems/data/' + id, {\n            headers: {\n                'Accept':'Content-Type, text/csv, */*',  // It can be used to overcome cors errors\n                'Content-Disposition': 'attachment; filename=\\\"' + 'download-' + Date.now() + '.csv'\n            }\n        })\n        .then(res => {\n            this.setState({fetching:false});\n            if (res.status === 200) {\n                return res.text();\n            }\n        })\n        .then(text => {\n            const element = document.createElement(\"a\");\n            const file = new Blob([text], {type: 'text/plain'});\n            element.href = URL.createObjectURL(file);\n            element.download = 'download-' + Date.now() + '.csv';\n            document.body.appendChild(element); // Required for this to work in FireFox\n            element.click();\n        });\n    }\n\n    render() {\n        var _downloadBtn = this.state.fetching ?\n            <Button className='dropdown-problems' \n                variant=\"danger\" \n                //href={\"/api/problems/data/\" + this.state.active}\n                disabled={this.state.fetching}>\n                <span>\n                    <Spinner\n                        as=\"span\"\n                        animation=\"border\"\n                        size=\"sm\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                        variant=\"light\"\n                    />\n                    <span className=\"spacing\"></span>\n                    Fetching ...\n                </span>\n            </Button>\n        :\n            <Button className='dropdown-problems' \n                variant=\"success\" \n                onClick={() => {this.downloadStats(this.state.active)}}\n                //href={\"/api/problems/data/\" + this.state.active}\n                disabled={this.state.fetching}>\n                Download Stats\n            </Button>;\n        \n        \n        var downloadBtn = this.state.active !== '' ? \n            (_downloadBtn)\n        :\n            <span></span>;\n        \n        return (\n            <div className='dash'>\n                <div className='sidemenu dash-item'>\n                    <Dropdown className='dropdown-problems'>\n                        <Dropdown.Toggle variant=\"info\" className='dropdown-problems-item' id=\"dropdown-basic\">\n                            Problems\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            {this.state.problems.map(item=>(\n                                \n                                <Dropdown.Item key={item.id} \n                                            onClick={() => {this.chooseProblem(item.id, item.name, item.description, item.code, item.defaultOutput, false)}}>\n                                    {item.name}\n                                </Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    {this.state.currentProblem.users.length == 0 && this.state.active !== '' ?\n                        <div>LOADING....</div>\n                    :\n                        (downloadBtn)\n                        \n                    }           \n                    {this.state.currentProblem.users.map(user=>(\n                        \n                        <Dropdown className='dropdown-problems dropdown-problems-user'>\n                            <Dropdown.Toggle variant=\"secondary\" className='dropdown-problems-item dropdown-problems-item-user' id=\"dropdown-basic\"\n                            >\n                                {user.email}\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu className=\"dropdown-menu\">\n                                {user.attempts.map((item, i)=>(\n                                    \n                                    <Dropdown.Item key={item.id} \n                                                onClick={() => {this.selectUser(user, item)}}\n                                                className=\"drop-item\">\n                                        {\"Attempt \" + i}\n                                    </Dropdown.Item>\n                                ))}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    ))}\n                </div>\n                <div className='dash-content dash-item'>\n                    <div className=\"dash-content-item editor-container\">\n                        <div className='problem-status'>\n\n                            <div className='status-item'> \n                                {this.state.problemComplete ?\n                                    <Badge pill variant=\"success\">Complete</Badge>\n                                :\n                                    <Badge pill variant=\"warning\">Incomplete</Badge>\n                                }\n                            </div>\n                            <div className='status-item'> \n                                {this.state.active !== '' && this.state.running ?\n                                    <Badge pill variant=\"danger\">Running...</Badge>\n                                :\n                                    <span></span>\n                                }\n                            </div>\n\n                            <div className='status-item'> \n                                {this.state.user.firstname}\n                            </div>\n                            <div className='status-item'> \n                                {this.state.user.lastname}\n                            </div>\n                            <div className='status-item'> \n                                {\"id: \" + this.state.user.id}\n                            </div>\n                            <div className='status-item'> \n                                {\"type: \" + this.state.user.type}\n                            </div>\n                            <div className='status-item'> \n                                {\"Total Attempts: \" + this.state.user.totalAttempts}\n                            </div>\n                            {/* <div className='status-item'><Badge variant=\"light\">Attempts <Badge variant=\"dark\">{this.state.currentAttempts}</Badge></Badge></div> */}\n                        \n                        </div>\n                        <AceEditor\n                            placeholder=\"Enter python code\"\n                            mode=\"python\"\n                            theme=\"github\"\n                            name=\"editor\"\n                            className=\"editor\"\n                            onLoad={this.onLoad}\n                            onChange={this.onChangeCode}\n                            fontSize={14}\n                            showPrintMargin={true}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.state.currentProblem.code}\n                            height='95%'\n                            width='99%'\n                            wrapEnabled={true}\n                            setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: true,\n                                showLineNumbers: true,\n                                tabSize: 4,\n                                readOnly: true\n                            }}\n                            key={this.state.active + \"-editor\"}\n                            annotations={this.state.currentErrors}\n                        />\n                    </div>\n                    <div className=\"dash-content-item right-side\">\n                        <div className=\"problem-info\">\n                            <div className='title'>\n                                {this.state.currentProblem.name}\n                            </div>\n                            <div className='description'>\n                                {this.state.currentProblem.description}\n                            </div>\n                        </div>\n                        <div className=\"console\">\n                            <AceEditor\n                                placeholder=\"\"\n                                mode=\"json\"\n                                theme=\"github\"\n                                name=\"console\"\n                                className='console-editor'\n                                onLoad={this.onLoad}\n                                onChange={this.onChangeConsole}\n                                fontSize={12}\n                                showPrintMargin={false}\n                                showGutter={true}\n                                highlightActiveLine={false}\n                                value={this.state.output}\n                                height='100%'\n                                width='100%'\n                                wrapEnabled={true}\n                                setOptions={{\n                                    enableBasicAutocompletion: false,\n                                    enableLiveAutocompletion: false,\n                                    enableSnippets: false,\n                                    showLineNumbers: false,\n                                    tabSize: 2,\n                                    readOnly: true\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n      }\n    \n}\n\nexport default withRouter(Stats);","import React, { Component } from \"react\";\nimport { Link, Route, Switch, BrowserRouter } from 'react-router-dom';\nimport \"../../pages/style/Home.css\";\n\nimport Home from '../../pages/Home';\nimport Login from '../../pages/Login';\nimport Registration from '../../pages/Registration';\nimport Logout from '../../pages/Logout';\nimport Stats from '../../pages/Stats';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            isAdmin: false,\n            items: {},\n            isLoggedIn:false,\n            firstname: '',\n            lastname: '',\n            id:'',\n            refreshed: true\n        };\n\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n        this.setName = this.setName.bind(this);\n        this.setAdmin = this.setAdmin.bind(this);\n        this.setId = this.setId.bind(this);\n    }\n\n    login() {\n        this.setState({isLoggedIn: true});\n    }\n\n    logout() {\n        this.setState({isLoggedIn: false});\n    }\n\n    setName(name) {\n        this.setState(name);\n    }\n\n    setId(id) {\n        this.setState({id:id});\n    }\n\n    setAdmin(isAdmin) {\n        this.setState({isAdmin: isAdmin});\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    msg: \"USER LOGGED IN!\",\n                    isLoggedIn:true,\n                    loading:false\n                });\n                return res.json();\n            } else {\n                this.setState({\n                    msg: \"PLEASE LOGIN FIRST.\",\n                    isLoggedIn:false,\n                    loading:false\n                });\n            }\n        })\n        .then(data => {\n            if (data) {\n                //console.log(data);\n                this.setState({\n                    firstname: data.firstname,\n                    lastname: data.lastname\n                });\n                this.setState({isAdmin: data.isAdmin});\n                this.setState({id:data.id});\n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginButton = this.state.isLoggedIn ? (<div className='nav-item'><Link to=\"/logout\">Logout</Link></div>) : (\n        <div>\n            <div className='nav-item'><Link to=\"/login\">Login</Link></div>\n            <div className='nav-item'><Link to=\"/register\">Register</Link></div></div>\n        );\n\n        return (\n            <BrowserRouter>\n                <div className='container'>\n                    <div className='nav'>\n                        <div className='logo'>PyBuggy</div>\n                        <div className='nav-cont'>\n                            {this.state.id !== '' ?\n                                <div className='userID'>ID: <span className='highlight'>{this.state.id}</span></div>\n                            :\n                                <span></span>\n                            }\n                            {this.state.isAdmin ?\n                                <div className='admin-tag'>A</div>\n                            :\n                                <span></span>\n                            }\n                            <div className='firstname'>{this.state.firstname}</div>\n                            <div className='lastname'>{this.state.lastname}</div>\n                            <div className='nav-item'><Link to=\"/\">Home</Link></div>\n                            {this.state.isAdmin ?\n                                <div className='nav-item'><Link to=\"/stats\">Stats</Link></div>\n                            :\n                                <span></span>\n                            }\n                            {loginButton}\n                        </div>\n                    </div>\n                    <div className='content'>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => <Home login={this.login} logout={this.logout} setName={this.setName} setAdmin={this.setAdmin} setId={this.setId}/>} />\n                            <Route exact path=\"/login\" component={() => <Login login={this.login} logout={this.logout}  setName={this.setName} setAdmin={this.setAdmin} setId={this.setId}/>} />\n                            <Route exact path=\"/logout\" component={() => <Logout login={this.login} logout={this.logout}  setName={this.setName} setAdmin={this.setAdmin} setId={this.setId}/>}/>\n                            <Route exact path=\"/register\" component={() => <Registration login={this.login} logout={this.logout} setName={this.setName} setAdmin={this.setAdmin} setId={this.setId}/>} />\n                            <Route exact path=\"/stats\" component={() => <Stats login={this.login} logout={this.logout} setName={this.setName} setAdmin={this.setAdmin} setId={this.setId}/>} />\n                            \n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}